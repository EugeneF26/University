# Configure postgres

server.servlet.context-path=/university2
#Он по умолчанию 8080, но не плохо было бы и указать явно
server.port=8080

#spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/postgres?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF8&serverTimezone=UTC}
spring.datasource.url=jdbc:mysql://localhost:3306/university2?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=UTF8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=2610
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#Этот диалект использует кибернейт для переноса данных
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#spring.jpa.mapping-resources=com.project.university.model

#Этот диалект использует кибернейт для переноса данных
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Configure Hibernate
#spring.jooq.sql-dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

#Здесь мы говорим программе показывать нам sql запросы, которые она будет генерить по ходу работы программы
#Здесь говорим, чтобы эти запросы красиво отформатировались
spring.jpa.properties.hibernate.format_sql=true
#Настройка уровня логгирования
logging.level.root=INFO


#spring.jpa.database=postgresql
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=2610
# Configure thymeleaf
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.servlet.content-type=text/html
#spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates/